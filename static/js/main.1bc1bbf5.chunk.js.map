{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onSetSelectedTodo","selectedTodo","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","query","filter","onSetQuery","onSetSelectedFilter","value","onChange","event","target","placeholder","style","pointerEvents","hidden","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","user","setUser","loadingUser","a","userId","selectedUser","useEffect","href","email","name","App","allTodos","setAllTodos","setSelectedTodo","isLoading","setIsLoading","setQuery","setSelectedFilter","finally","visibleTodos","trimmed","toLocaleLowerCase","trim","includes","ReactDOM","render","document","getElementById"],"mappings":"oPAUaA,EAA4B,SAAC,GAInC,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,kBACAC,EACI,EADJA,aAEA,OACE,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGH,EAAMI,KAAI,SAACC,GAAD,OACT,qBACE,UAAQ,OACRF,UAAU,GAFZ,UAKE,oBAAIA,UAAU,eAAd,SAA8BE,EAAKC,KACnC,oBAAIH,UAAU,eAAd,SACGE,EAAKE,WACJ,sBAAMJ,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAInB,oBAAIA,UAAU,2BAAd,SACE,mBACEA,UAAWK,IAAW,CACpB,mBAAoBH,EAAKE,UACzB,mBAAoBF,EAAKE,YAH7B,SAMGF,EAAKI,UAGV,oBAAIN,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVO,KAAK,SACLC,QAAS,WACPV,EAAkBI,IALtB,SAQE,sBAAMF,UAAU,OAAhB,SACE,mBACEA,UAAWK,IACT,MACA,CACE,SAAUH,IAASH,EACnB,eAAgBG,IAASH,cAnChCG,EAAKC,aC1BTM,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,WACAC,EACI,EADJA,oBAEA,OACE,uBAAMb,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRc,MAAOH,EACPI,SAAU,SAACC,GACTH,EAAoBG,EAAMC,OAAOH,QAJrC,UAOE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGd,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRO,KAAK,OACLP,UAAU,QACVkB,YAAY,YACZJ,MAAOJ,EACPK,SAAU,SAACC,GACTJ,EAAWI,EAAMC,OAAOH,UAG5B,sBAAMd,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAEdU,GACC,sBACEV,UAAU,gBACVmB,MAAO,CAAEC,cAAe,OAF1B,SAKE,wBACE,UAAQ,oBACRb,KAAK,SACLP,UAAU,SACVqB,QAAM,EACNb,QAAU,WACRI,EAAW,gB,uBC7C3B,SAASU,EAAOC,GAEd,IARYC,EAQNC,EAZS,iEAYYF,EAAM,QAGjC,OAXYC,EAWA,IAVL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OAUnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,U,MAGd,ICrBMC,EAAmB,kBAC9B,qBAAKjC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,uBCONkC,EAA6B,SAAC,GAGpC,IAFLnC,EAEI,EAFJA,aACAD,EACI,EADJA,kBAEA,EAAwBqC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAW,uCAAG,4BAAAC,EAAA,sEFQEC,EEPezC,EAAayC,OFOTlB,EAAG,iBAAiBkB,IERzC,OACZC,EADY,OAGlBJ,EAAQI,GAHU,iCFQC,IAACD,IERF,OAAH,qDAUjB,OAJAE,qBAAU,WACRJ,MACC,IAGD,sBAAKtC,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEboC,EAIE,sBAAKpC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYD,EAAaI,MAGzB,wBACEI,KAAK,SACLP,UAAU,SACV,UAAQ,cACRQ,QAAS,WACPV,EAAkB,YAIxB,sBAAKE,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGD,EAAaO,QAGhB,oBAAGN,UAAU,QAAQ,UAAQ,aAA7B,UAEE,wBACEA,UAAWK,IAAW,CACpB,mBAAoBN,EAAaK,UACjC,mBAAoBL,EAAaK,YAHrC,SAMGL,EAAaK,UACT,OACA,YAGN,OAED,mBAAGuC,KAAI,iBAAYP,EAAKQ,OAAxB,SACGR,EAAKS,gBAzCd,cAAC,EAAD,QCrBGC,EAAgB,WAC3B,MAAgCX,mBAAiB,IAAjD,mBAAOY,EAAP,KAAiBC,EAAjB,KACA,EAAwCb,mBAAsB,MAA9D,mBAAOpC,EAAP,KAAqBkD,EAArB,KACA,EAAkCd,oBAAS,GAA3C,mBAAOe,EAAP,KAAkBC,EAAlB,KACA,EAA0BhB,mBAAS,IAAnC,mBAAOzB,EAAP,KAAc0C,EAAd,KACA,EAAoCjB,mBAAS,OAA7C,mBAAOxB,EAAP,KAAe0C,EAAf,KAEAX,qBAAU,WACRS,GAAa,GHGa7B,EAAY,UGF3BO,KAAKmB,GAEbM,SAAQ,WACPH,GAAa,QAEhB,IAEH,IAAMI,EAAeR,EAClBpC,QAAO,SAACT,GACP,IAAMsD,EAAU9C,EAAM+C,oBAAoBC,OAG1C,OAFcxD,EAAKI,MAAMmD,oBAEZE,SAASH,MAEvB7C,QAAO,SAACT,GACP,OAAQS,GACN,IAAK,SACH,OAAQT,EAAKE,UACf,IAAK,YACH,OAAOF,EAAKE,UAEd,QACE,OAAO,MAIf,OACE,qCACE,qBAAKJ,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEU,MAAOA,EACPC,OAAQA,EACRC,WAAYwC,EACZvC,oBAAqBwC,MAGzB,sBAAKrD,UAAU,QAAf,UACGkD,GACC,cAAC,EAAD,IAEF,cAAC,EAAD,CACErD,MAAO0D,EACPzD,kBAAmBmD,EACnBlD,aAAcA,cAOvBA,GACC,cAAC,EAAD,CACEA,aAAcA,EACdD,kBAAmBmD,QC7E7BW,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1bc1bbf5.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  onSetSelectedTodo: (todo: Todo) => void,\n  selectedTodo: Todo | null,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onSetSelectedTodo,\n  selectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  onSetSelectedTodo(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={classNames(\n                      'far',\n                      {\n                        'fa-eye': todo !== selectedTodo,\n                        'fa-eye-slash': todo === selectedTodo,\n                      },\n                    )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  query: string\n  filter: string\n  onSetQuery: (value: string) => void;\n  onSetSelectedFilter: (value: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  filter,\n  onSetQuery,\n  onSetSelectedFilter,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={(event) => {\n              onSetSelectedFilter(event.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => {\n            onSetQuery(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {query && (\n          <span\n            className=\"icon is-right\"\n            style={{ pointerEvents: 'all' }}\n          >\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              hidden\n              onClick={(() => {\n                onSetQuery('');\n              })}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo,\n  onSetSelectedTodo: (todo: Todo | null) => void\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  onSetSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User>();\n\n  const loadingUser = async () => {\n    const selectedUser = await getUser(selectedTodo.userId);\n\n    setUser(selectedUser);\n  };\n\n  useEffect(() => {\n    loadingUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user\n        ? (\n          <Loader />\n        ) : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${selectedTodo.id}`}\n              </div>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => {\n                  onSetSelectedTodo(null);\n                }}\n              />\n            </header>\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {selectedTodo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {/* <strong className=\"has-text-success\">Done</strong> */}\n                <strong\n                  className={classNames({\n                    'has-text-danger': !selectedTodo.completed,\n                    'has-text-success': selectedTodo.completed,\n                  })}\n                >\n                  {selectedTodo.completed\n                    ? ('Done')\n                    : ('Planned')}\n                </strong>\n\n                {' by '}\n\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable no-console */\n/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [allTodos, setAllTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [query, setQuery] = useState('');\n  const [filter, setSelectedFilter] = useState('all');\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos().then(setAllTodos)\n\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  const visibleTodos = allTodos\n    .filter((todo) => {\n      const trimmed = query.toLocaleLowerCase().trim();\n      const title = todo.title.toLocaleLowerCase();\n\n      return title.includes(trimmed);\n    })\n    .filter((todo) => {\n      switch (filter) {\n        case 'active':\n          return !todo.completed;\n        case 'completed':\n          return todo.completed;\n\n        default:\n          return true;\n      }\n    });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                filter={filter}\n                onSetQuery={setQuery}\n                onSetSelectedFilter={setSelectedFilter}\n              />\n            </div>\n            <div className=\"block\">\n              {isLoading && (\n                <Loader />\n              )}\n              <TodoList\n                todos={visibleTodos}\n                onSetSelectedTodo={setSelectedTodo}\n                selectedTodo={selectedTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          onSetSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}